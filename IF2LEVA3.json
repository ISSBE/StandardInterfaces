{
  "openapi": "3.0.0",
  "info": {
    "title": "IF2LEVA3 - Preview",
    "version": "v3",
    "description": "performis IF2LEVA3 | Interface for leva+ base, scheduling and workshop",
    "contact": {
      "name": "Infosystem AG",
      "email": "support@infosystem.ch",
      "url": "https://www.infosystem.ch"
    }
  },
  "servers": [],
  "paths": {
    "/api/v3/base/Accessory": {
      "get": {
        "summary": "Get accessory data from LEVA+.",
        "operationId": "base-GetAccessory",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entities which were added/edited since a specific datetime. Cannot be used together with search\r\nparameters (searchString, internalAccessoryId,\r\nexternalAccessoryId).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search\r\nparameters (searchString, internalAccessoryId,\r\nexternalAccessoryId).",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "internalAccessoryId",
            "in": "query",
            "description": "Retrieve a specific record by internal accessory ID. Ignores other search options if provided.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalAccessoryId",
            "in": "query",
            "description": "Retrieve a specific record by external accessory ID. Ignores other search options if provided.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "By passing in the appropriate options, the service searches for available accessories in the system.",
        "tags": [
          "MasterData"
        ]
      },
      "put": {
        "summary": "Create or update an existing accessory in LEVA+.",
        "operationId": "base-PutAccessory",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New or updated accessory.\r\nYou may use your own ID.\r\nThe same DTO you receive from a GET is used. The change fields are not required.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessoryDto"
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing accessory if internal nor external ID match. Creates an accessory if neither internal or external ID is provided or no matching record could be found.",
        "tags": [
          "MasterData"
        ]
      }
    },
    "/api/v3/base/Machine": {
      "get": {
        "summary": "Get machine data from LEVA+.",
        "operationId": "base-GetMachine",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entities which were added/edited since a specific datetime. Cannot be used together with search\r\nparameters (searchString, internalMachineId,\r\nexternalMachineId).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search\r\nparameters (searchString, internalMachineId,\r\nexternalMachineId).",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "internalMachineID",
            "in": "query",
            "description": "Retrieve a specific record by internal machine ID. Ignores other search options if provided.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalMachineID",
            "in": "query",
            "description": "Retrieve a specific record by external machine ID. Ignores other search options if provided.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MachineDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "By passing in the appropriate options, the service searches for available machine(s) in the system.",
        "tags": [
          "MasterData"
        ]
      },
      "put": {
        "summary": "Create or update an existing Machine in LEVA+.",
        "operationId": "base-PutMachine",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New or updated machine.\r\nYou may use your own ID.\r\nThe same DTO you receive from a GET is used. The change fields are not required.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MachineDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineDto"
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing machine if internal nor external ID match. Creates a machine if neither internal or external ID is provided or no matching record could be found.",
        "tags": [
          "MasterData"
        ]
      }
    },
    "/api/v3/base/MachineType": {
      "get": {
        "summary": "Get machine type data from LEVA+.",
        "operationId": "base-GetMachineType",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entities which were added/edited since a specific datetime. Cannot be used together with search\r\nparameters (searchString, internalMachineTypeId,\r\nexternalMachineTypeId).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search\r\nparameters (searchString, internalMachineTypeId,\r\nexternalMachineTypeId).",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "internalMachineTypeID",
            "in": "query",
            "description": "Retrieve a specific record by internal machine type ID. Ignores other search options if provided.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalMachineTypeID",
            "in": "query",
            "description": "Retrieve a specific record by external machine type ID. Ignores other search options if provided.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MachineTypeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "By passing in the appropriate options, the service searches for available machine type(s) in the system.",
        "tags": [
          "MasterData"
        ]
      },
      "put": {
        "summary": "Create or update an existing machine type in LEVA+.",
        "operationId": "base-PutMachineType",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New or updated machine type.\r\nYou may use your own ID.\r\nThe same DTO you receive from a GET is used. The change fields are not required.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineTypeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineTypeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MachineTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineTypeDto"
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineTypeDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing machine type if internal nor external ID match. Creates a machine type if neither internal or external ID is provided or no matching record could be found.",
        "tags": [
          "MasterData"
        ]
      }
    },
    "/api/v3/base/Surcharge": {
      "get": {
        "summary": "Search for Surcharge",
        "tags": [
          "MasterData"
        ],
        "operationId": "base-GetSurcharge",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "internalSurchargeID",
            "in": "query",
            "description": "Retrieve specific record by internal id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalSurchargeID",
            "in": "query",
            "description": "Retrieve specific record by external id. (Ignores searchString parameter if provided)",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "(Optional) Technical ID (GUID) for Call identification",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for available surcharge(s) in the system."
      }
    },
    "/api/v3/scheduling/Job": {
      "get": {
        "summary": "Search for Job",
        "operationId": "scheduling-GetJob",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "internalJobID",
            "in": "query",
            "description": "Retrieve specific record by internal id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalJobID",
            "in": "query",
            "description": "Retrieve specific record by external id. (Ignores searchString parameter if provided)",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "IncludeDetails",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "boolean",
              "default": "true"
            },
            "description": "Wether or not to retrieve job details with this call"
          },
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "(Optional) Technical ID (GUID) for Call identification",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for available job(s) in the system.",
        "tags": [
          "SchedulingJob"
        ]
      }
    },
    "/api/v3/scheduling/Job/TimeStamp": {
      "get": {
        "summary": "Search for Job Timestamp",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobTimeStampDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "scheduling-GetJobTimeStamp",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "internalJobID",
            "in": "query",
            "description": "Retrieve specific record by internal id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalJobID",
            "in": "query",
            "description": "Retrieve specific record by external id. (Ignores searchString parameter if provided)",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "(Optional) Technical ID (GUID) for Call identification",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for available job time stamp(s) in the system."
      },
      "parameters": [],
      "put": {
        "summary": "Modify Job Time Stamps",
        "operationId": "scheduling-PutJobTimeStamp",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobTimeStampDto"
                  }
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobTimeStampDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobTimeStampDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobTimeStampDto"
                }
              }
            }
          },
          "description": "New or updated time stamps for JobID."
        },
        "description": "Updates an existing set of job time stamps for a given internal nor external Job ID.",
        "tags": [
          "SchedulingJob"
        ]
      }
    },
    "/api/v3/scheduling/Job/Report": {
      "get": {
        "summary": "Search for Job Report",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobReportDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "scheduling-GetJobReport",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "internalJobID",
            "in": "query",
            "description": "Retrieve specific record by internal id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalJobID",
            "in": "query",
            "description": "Retrieve specific record by external id. (Ignores searchString parameter if provided)",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "(Optional) Technical ID (GUID) for Call identification",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for job report(s) in the system."
      },
      "post": {
        "summary": "Create Job Report",
        "operationId": "scheduling-PostReport",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobReportDto"
              }
            }
          },
          "description": "Submit a full report Dto for creation.\nReports can not be altered by the interface after creation. Once a report is created it needs to be processed or deleted within leva+"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobReportDto"
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobReportDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "tags": [
          "SchedulingJob"
        ]
      }
    },
    "/api/v3/scheduling/Job/Handover": {
      "get": {
        "summary": "Search for Job Handover",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobHandOverDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "scheduling-GetJobHandover",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "internalJobID",
            "in": "query",
            "description": "Retrieve specific record by internal id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalJobID",
            "in": "query",
            "description": "Retrieve specific record by external id. (Ignores searchString parameter if provided)",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "(Optional) Technical ID (GUID) for Call identification",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for job handover in the system."
      },
      "put": {
        "summary": "Modify Job Handover",
        "operationId": "scheduling-PutJobHandover",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobHandOverDto"
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobHandOverDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing job handover for a given internal nor external Job ID.",
        "tags": [
          "SchedulingJob"
        ]
      }
    },
    "/api/v3/scheduling/Job/Return": {
      "get": {
        "summary": "Search for Job Return",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobReturnDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "scheduling-GetJobReturn",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "internalJobID",
            "in": "query",
            "description": "Retrieve specific record by internal id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalJobID",
            "in": "query",
            "description": "Retrieve specific record by external id. (Ignores searchString parameter if provided)",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "(Optional) Technical ID (GUID) for Call identification",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for job return in the system."
      },
      "put": {
        "summary": "Modify Job Return",
        "operationId": "scheduling-PutJobReturn",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobReturnDto"
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobReturnDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing job return for a given internal nor external Job ID.",
        "tags": [
          "SchedulingJob"
        ]
      }
    },
    "/api/v3/scheduling/Job/Surcharge": {
      "get": {
        "summary": "Search for Job Surcharge",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobSurchargeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "scheduling-GetJobSurcharge",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "internalJobID",
            "in": "query",
            "description": "Retrieve specific record by internal id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalJobID",
            "in": "query",
            "description": "Retrieve specific record by external id. (Ignores searchString parameter if provided)",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "(Optional) Technical ID (GUID) for Call identification",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for available job surcharges(s) in the system."
      },
      "parameters": [],
      "put": {
        "summary": "Modify Job Surchage",
        "operationId": "scheduling-PutJobSurcharge",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobSurchargeDto"
                  }
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobSurchargeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing set of job surcharges for a given internal nor external Job ID.",
        "tags": [
          "SchedulingJob"
        ]
      }
    },
    "/api/v3/scheduling/Job/Form": {
      "get": {
        "summary": "Search for Job Form",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobFormDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "scheduling-GetJobForm",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "internalJobID",
            "in": "query",
            "description": "Retrieve specific record by internal id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalJobID",
            "in": "query",
            "description": "Retrieve specific record by external id. (Ignores searchString parameter if provided)",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "(Optional) Technical ID (GUID) for Call identification",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for job form(s) in the system.",
        "tags": [
          "SchedulingJob"
        ]
      },
      "parameters": [],
      "put": {
        "summary": "Modify Job Form",
        "operationId": "scheduling-PutJobForm",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobFormDto"
                  }
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobFormDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing set of job job forms for a given internal nor external Job ID.",
        "tags": [
          "SchedulingJob"
        ]
      }
    },
    "/api/v3/scheduling/Job/Problem": {
      "get": {
        "summary": "Search for Job Problem",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobProblemDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "scheduling-GetJobProblem",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "internalJobID",
            "in": "query",
            "description": "Retrieve specific record by internal id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalJobID",
            "in": "query",
            "description": "Retrieve specific record by external id. (Ignores searchString parameter if provided)",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "(Optional) Technical ID (GUID) for Call identification",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "description": "By passing in the appropriate options, the service searches for job problem(s) in the system."
      },
      "put": {
        "summary": "Modify Job Problem",
        "operationId": "scheduling-PutJobProblem",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobProblemDto"
                  }
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobProblemDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing set of job problems for a given internal nor external Job ID.",
        "tags": [
          "SchedulingJob"
        ]
      }
    },
    "/api/v3/scheduling/Job/Document": {
      "get": {
        "summary": "Search for Job Document",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDocumentDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "internalJobID",
            "in": "query",
            "description": "Retrieve specific record by internal id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalJobID",
            "in": "query",
            "description": "Retrieve specific record by external id. (Ignores searchString parameter if provided)",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "(Optional) Technical ID (GUID) for Call identification",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "operationId": "scheduling-GetJobDocument",
        "description": "By passing in the appropriate options, the service searches for job document(s) in the system."
      },
      "put": {
        "summary": "Modify Job Document",
        "operationId": "scheduling-PutJobDocument",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDocumentDto"
                  }
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDocumentDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing set of job documents for a given internal nor external Job ID.",
        "tags": [
          "SchedulingJob"
        ]
      }
    },
    "/api/v3/scheduling/Job/TransportDemand": {
      "get": {
        "summary": "Search for Job Transport Demand",
        "tags": [
          "SchedulingJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobTransportDemandDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entites which were added/edited since a specific datetime. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeID",
            "in": "query",
            "description": "Get all the entities which were added/edited since the provided ChangeID. Cannot be used together with search parameter (ID, Searchstring).",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "internalJobID",
            "in": "query",
            "description": "Retrieve specific record by internal id. (Ignores other search options if provided)",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalJobID",
            "in": "query",
            "description": "Retrieve specific record by external id. (Ignores searchString parameter if provided)",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifing the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifing the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "(Optional) Technical ID (GUID) for Call identification",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "operationId": "scheduling-GetJobTransportDemand",
        "description": "By passing in the appropriate options, the service searches for job transport demand(s) in the system."
      },
      "put": {
        "summary": "Modify Job Transport Demand",
        "operationId": "scheduling-PutJobTransportDemand",
        "parameters": [
          {
            "name": "X-RequestingSystem",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-RequestingUser",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical ID (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobTransportDemandDto"
                  }
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobTransportDemandDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requester has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "description": "Updates an existing set of job transport demands for a given internal nor external Job ID.",
        "tags": [
          "SchedulingJob"
        ]
      }
    },
    "/api/v3/scheduling/Job/BookingActivity": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-api-v3-scheduling-Job-BookingActivity"
      }
    }
  },
  "components": {
    "schemas": {
      "AccessoryDisplayType": {
        "enum": [
          "None",
          "Identification",
          "Quantity"
        ],
        "type": "string",
        "description": "Possible values for performis.Bau.IF2BHTR.Core.Dtos.AccessoryDto.AccessoryDisplayType property.\r\n- `NONE`: Accessory without identification nor quantity\r\n- `IDENTIFICATION`: Accessory with identification\r\n- `QUANTITY`: Accessory with quantity"
      },
      "AccessoryDto": {
        "type": "object",
        "additionalProperties": false,
        "description": "Data transfer object of a LEVA+ `Accessory` master data entry.",
        "properties": {
          "ChangeID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "ChangeID of the entity.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "ChangeDate": {
            "type": "string",
            "description": "ChangeDate of the entity.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "AccessoryID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Technical identification number of the accessory.",
            "format": "int64",
            "example": 27,
            "nullable": true
          },
          "ExternalAccessoryID": {
            "maxLength": 50,
            "type": "string",
            "description": "External technical identification number of the accessory - may be used instead of performis.Bau.IF2BHTR.Core.Dtos.AccessoryDto.AccessoryID.",
            "example": "ABC4711",
            "nullable": true
          },
          "Origin": {
            "maxLength": 10,
            "type": "string",
            "description": "Origin of the entity.",
            "nullable": true,
            "readOnly": true
          },
          "Active": {
            "type": "boolean",
            "description": "Is this accessory active or not.",
            "nullable": true
          },
          "Description": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Accessory's name.",
            "example": "Wooden wedge"
          },
          "AccessoryDisplayType": {
            "$ref": "#/components/schemas/AccessoryDisplayType"
          },
          "NumberOfItems": {
            "type": "integer",
            "description": "The exact number of available accessories.\r\nRequired if performis.Bau.IF2BHTR.Core.Dtos.AccessoryDto.AccessoryDisplayType is set to `QUANTITY`.",
            "format": "int64",
            "example": 20,
            "nullable": true
          },
          "Identification": {
            "maxLength": 200,
            "type": "string",
            "description": "Identification or serial number of the accessory.\r\nRequired if performis.Bau.IF2BHTR.Core.Dtos.AccessoryDto.AccessoryDisplayType is set to `IDENTIFICATION`.",
            "example": "A507",
            "nullable": true
          },
          "BranchCode": {
            "maximum": 45629999,
            "minimum": 45620000,
            "type": "integer",
            "description": "C4562 identification code of the branch to which the machine belongs to.",
            "format": "int64",
            "nullable": true
          },
          "IsExternalResource": {
            "type": "boolean",
            "description": "A value indicating whether the resource is external."
          },
          "DispositionGroupCode": {
            "maximum": 45429999,
            "minimum": 45420000,
            "type": "integer",
            "description": "C4542 code of the accessory's grouping that combines accessories of the same type and use\r\n(not necessarily the same model or manufacturer).",
            "format": "int64",
            "example": 45420010
          },
          "CostCenterNo": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Cost center for accessory",
            "nullable": true
          },
          "OwnerCompanyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "The number of the company that owns the accessory.",
            "format": "int64",
            "nullable": true
          },
          "DispositionGroups": {
            "type": "array",
            "description": "List of additional disposition groups. A disposition group combines accessories of the same type and use\r\n(not necessarily the same model or manufacturer).",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DispositionGroupDto"
            }
          }
        },
        "required": [
          "Description",
          "AccessoryDisplayType",
          "IsExternalResource",
          "DispositionGroupCode"
        ]
      },
      "AddressDto": {
        "required": [
          "Active",
          "City",
          "Country",
          "Language",
          "Origin",
          "ZipCode"
        ],
        "type": "object",
        "properties": {
          "BpAddrID": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "performis Address ID - This ID uniquely identifies an address in performis. For example, ID \\\"629\\\" for address \\\"Infosystem AG, Wil\\\". To identify the address, either the performis address ID (BpAddrID) or the ID of the external system (ExternalBpAddrID) is required.",
            "format": "int64",
            "nullable": true
          },
          "ExternalBpAddrID": {
            "maxLength": 50,
            "type": "string",
            "description": "Third-party address ID - This ID must be unique within the origin (Origin field). As ID it is recommended to use either the Primary Key of the foreign system or a GUID (Global Unique Identifier). For example, ID \\\"629c5d97-a225-4b08-877c-e8a802c23014\\\" for origin \\\"ERP\\\".  To identify the address, either the performis address ID (BpAddrID) or the ID of the external system (ExternalBpAddrID) is required.",
            "nullable": true
          },
          "Origin": {
            "maxLength": 10,
            "type": "string",
            "description": "Origin of the business partner, name of the third-party system. Business partners and addresses with an origin can't be edited in performis."
          },
          "Active": {
            "type": "boolean",
            "description": "true = active, false = deleted"
          },
          "ShortAddress": {
            "maxLength": 50,
            "type": "string",
            "description": "Short address - Short form of the address. It is generated automatically if not supplied. The short address is used in performis to identify the address. For example, the Wiler address of Infosystem AG is abbreviated as: \\\"Infosystem AG, Wil\\\".",
            "nullable": true
          },
          "OverridePartnerName": {
            "maxLength": 50,
            "type": "string",
            "description": "If the name of the company on the address differs from that of the business partner, the name of the business partner can be overridden in this field. For example, if Infosystem AG is operating in German-speaking Switzerland as Infosystem AG, the name on the business partner will also be the same. For the Lausanne address, however, the name is overridden as \\\"Infosystem SA\\\".",
            "nullable": true
          },
          "OverridePartnerNameAddition": {
            "maxLength": 50,
            "type": "string",
            "description": "If the name addition of the company on the address differs from that of the business partner, the name suffix of the business partner can be overridden in this field.",
            "nullable": true
          },
          "Street": {
            "maxLength": 43,
            "type": "string",
            "description": "Street name without house number.",
            "nullable": true
          },
          "HouseNo": {
            "maxLength": 12,
            "type": "string",
            "description": "House number",
            "nullable": true
          },
          "POBox": {
            "maxLength": 50,
            "type": "string",
            "description": "he post office box of the address. The P.O. Box should be transferred including the country-specific text component. For example, for Switzerland \\\"Postfach 12\\\" in England \\\"PO Box 12\\\".",
            "nullable": true
          },
          "AdditionalLine1": {
            "maxLength": 50,
            "type": "string",
            "description": "Additional line of an address which is neither a street nor a post office box. For example, \\\"c/o Samuel Schnelli\\\" or \\\"Office Samuel Schnelli\\\".",
            "nullable": true
          },
          "AdditionalLine2": {
            "maxLength": 200,
            "type": "string",
            "description": "Extended additional component of an address that is neither a street nor a post office box. For example, \\\"Floor 12\\\" or \\\"Building 15\\\".",
            "nullable": true
          },
          "Country": {
            "maxLength": 2,
            "type": "string",
            "description": "Country in ISO code (ISO 3166)"
          },
          "ZipCode": {
            "maxLength": 20,
            "type": "string",
            "description": "Zipcode of the address in country-specific format. Mandatory together with the country code and the city. For example, \\\"EC1A 1AA\\\" for London, England or \\\"9500\\\" for Wil, Switzerland."
          },
          "City": {
            "maxLength": 40,
            "type": "string",
            "description": "city"
          },
          "Language": {
            "maxLength": 2,
            "type": "string",
            "description": "Language code in ISO-639-1"
          },
          "SearchTerms": {
            "maxLength": 500,
            "type": "string",
            "description": "Additional search terms under which this address is found. This is often used to use well-known abbreviations as search terms. For example, \\\"IS\\\" for Infosystem AG or \\\"MS\\\" for Microsoft.",
            "nullable": true
          },
          "Latitude": {
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "description": "Location latitude",
            "format": "double",
            "nullable": true
          },
          "Longitude": {
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "description": "Location longitude",
            "format": "double",
            "nullable": true
          },
          "AttributeValueSet": {
            "$ref": "#/components/schemas/AttributeValueSetDto"
          },
          "CommunicationAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommunicationAddressDto"
            },
            "description": "Gets or Sets CommunicationAddresses",
            "nullable": true
          },
          "Contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactDto"
            },
            "description": "Gets or Sets Contacts",
            "nullable": true
          },
          "Contact2Documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact2DocumentDto"
            },
            "description": "Gets or Sets Contact2Documents",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "",
        "x-examples": {}
      },
      "Application": {
        "enum": [
          "B_HTR",
          "B_SE",
          "B_TS",
          "B_WKST"
        ],
        "type": "string",
        "description": "Possible values for performis.Bau.IF2BBA.Core.Dtos.MachineDto.MachineUsages property.\r\n- `B_HTR`: LEVA+\r\n- `B_SE`: Steine + Erden\r\n- `B_TS`: Treibstoff\r\n- `B_WKST`: Werkstatt"
      },
      "ApplicationDto": {
        "required": [
          "Application"
        ],
        "type": "object",
        "properties": {
          "Application": {
            "$ref": "#/components/schemas/Application"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object of a machine's application usage.",
        "x-examples": {}
      },
      "AttributeValueDto": {
        "required": [
          "AttributeDefinitionID"
        ],
        "type": "object",
        "properties": {
          "AttributeDefinitionID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "ID of attribute definition",
            "format": "int32"
          },
          "AttributeDefinitionDescription": {
            "maxLength": 80,
            "type": "string",
            "description": "Description of the attribute definition",
            "nullable": true
          },
          "StringValue": {
            "maxLength": 1000,
            "type": "string",
            "description": "A string value",
            "nullable": true
          },
          "NumberValue": {
            "type": "number",
            "description": "Number or decimal value",
            "format": "double",
            "nullable": true
          },
          "DateValue": {
            "type": "string",
            "description": "Date value",
            "format": "date-time",
            "nullable": true
          },
          "BoolValue": {
            "type": "boolean",
            "description": "A true or false value",
            "nullable": true
          },
          "CodeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeValueDto"
            },
            "description": "Gets or Sets CodeValues",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "AttributValueDto"
      },
      "AttributeValueSetDto": {
        "required": [
          "AttributeSetID"
        ],
        "type": "object",
        "properties": {
          "AttributeSetID": {
            "maximum": 999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Performis internal of attribute set ID",
            "format": "int32"
          },
          "AttributSetDescription": {
            "maxLength": 80,
            "type": "string",
            "description": "Description / Title of the attribute set",
            "nullable": true
          },
          "AttributeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValueDto"
            },
            "description": "List of attribute values.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "AttributeValueSetDto"
      },
      "CodeDetailDto": {
        "required": [
          "CodeDetailID",
          "CodeID",
          "DetailNo",
          "Value"
        ],
        "type": "object",
        "properties": {
          "CodeDetailID": {
            "maximum": 99999999,
            "minimum": 1,
            "type": "integer",
            "description": "Technical ID, do not use.",
            "format": "int64"
          },
          "DetailNo": {
            "maximum": 99,
            "minimum": 1,
            "type": "integer",
            "description": "Identification of the detail",
            "format": "int32"
          },
          "CodeID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Technical ID of parent code, do not use",
            "format": "int64"
          },
          "Value": {
            "maxLength": 120,
            "minLength": 1,
            "type": "string",
            "description": "The value as characters assigned of the according code detail"
          },
          "ValueNumeric": {
            "type": "number",
            "description": "If the code detail is numeric, the value in addition provided as numeric value.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "CodeDetailDto"
      },
      "CodeDto": {
        "required": [
          "CodeID",
          "CodeNo",
          "CompanyNo",
          "Text"
        ],
        "type": "object",
        "properties": {
          "ChangeID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "ChangeID of the entity.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "ChangeDate": {
            "type": "string",
            "description": "ChangeDate of the entity.",
            "nullable": true,
            "readOnly": true
          },
          "CodeID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Technical ID, do not use.",
            "format": "int64"
          },
          "Active": {
            "type": "boolean",
            "description": "true = active, false = deleted",
            "nullable": true
          },
          "CodeType": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Performis CodeType - the code type. E.g. 27 for PaymentTerms",
            "format": "int32",
            "nullable": true
          },
          "CompanyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Company for which the code is valid. If company no is 0, the code is valid for all companies",
            "format": "int32"
          },
          "CodeNo": {
            "maximum": 99999999,
            "minimum": 1,
            "type": "integer",
            "description": "Performis Code - the first four digits are the entry in a specific codetype, the next 1 to 4 digits are the codetype. E.g. 270001 is codetype 27 entry 0001",
            "format": "int32"
          },
          "Text": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The textual description of the code. E.g. Code 270001 is \"30 days EOM\"."
          },
          "ShortText": {
            "maxLength": 12,
            "type": "string",
            "description": "The short description of the code. E.g. Code 270001 is \"30dEOM\".",
            "nullable": true
          },
          "CodeDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeDetailDto"
            },
            "description": "Gets or Sets CodeDetails",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "CodeDto",
        "x-examples": {
          "example-1": {
            "ChangeID": 1,
            "ChangeDate": "string",
            "CodeID": 1,
            "Active": true,
            "CodeType": 1,
            "CompanyNo": 1,
            "CodeNo": 1,
            "Text": "string",
            "ShortText": "string",
            "CodeDetails": [
              {
                "CodeDetailID": 1,
                "DetailNo": 1,
                "CodeID": 1,
                "Value": "string",
                "ValueNumeric": 0
              }
            ]
          }
        }
      },
      "CodeValueDto": {
        "required": [
          "Code",
          "CompanyNo"
        ],
        "type": "object",
        "properties": {
          "CompanyNo": {
            "maximum": 999999,
            "minimum": 0,
            "type": "integer",
            "description": "Company no for which the codevalue is available. 0 = all companies",
            "format": "int32"
          },
          "Code": {
            "maximum": 99999999,
            "minimum": 0,
            "type": "integer",
            "description": "ID of code",
            "format": "int32"
          },
          "Text": {
            "maxLength": 100,
            "type": "string",
            "description": "Description or title of the codevalue",
            "nullable": true
          },
          "Shorttext": {
            "maxLength": 12,
            "type": "string",
            "description": "Short-description or title of the codevalue",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "CodeValueDto"
      },
      "CounterDto": {
        "required": [
          "CounterTypeCode"
        ],
        "type": "object",
        "properties": {
          "CounterTypeCode": {
            "maximum": 45489999,
            "minimum": 45480000,
            "type": "integer",
            "description": "C4548 code of the counter type used in the machine, e.g. km, hours of operation.",
            "format": "int64",
            "example": 45480010
          },
          "Account": {
            "maxLength": 10,
            "type": "string",
            "description": "Account to post the counters against.",
            "nullable": true,
            "example": "4711"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object of a machine's counter."
      },
      "DateOnly": {
        "type": "object",
        "properties": {
          "Year": {
            "type": "integer",
            "format": "int32"
          },
          "Month": {
            "type": "integer",
            "format": "int32"
          },
          "Day": {
            "type": "integer",
            "format": "int32"
          },
          "DayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "DayOfYear": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "DayNumber": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "type": "string"
      },
      "DispositionGroupDto": {
        "required": [
          "DispositionGroupCode"
        ],
        "type": "object",
        "properties": {
          "DispositionGroupCode": {
            "maximum": 45429999,
            "minimum": 45420000,
            "type": "integer",
            "description": "C4542 code of the machine grouping that combines machines of the same type and use\r\n(not necessarily the same model or manufacturer).",
            "format": "int64",
            "example": 45420010
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object of a machine's additional disposition group."
      },
      "EmployeeDto": {
        "required": [
          "Active",
          "CompanyNo",
          "Internal",
          "Language",
          "LastName",
          "Origin",
          "PersonalNo"
        ],
        "type": "object",
        "properties": {
          "ChangeID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "ChangeID of the entity.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "ChangeDate": {
            "type": "string",
            "description": "ChangeDate of the entity.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "EmployeeID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Performis internal ID, must be supplied if ExternalEmployeeID is not.",
            "format": "int64",
            "nullable": true
          },
          "ExternalEmployeeID": {
            "maxLength": 50,
            "type": "string",
            "description": "External employee ID, must be supplied if (internal) EmployeeID is not.",
            "nullable": true
          },
          "Origin": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Origin identifier"
          },
          "Active": {
            "type": "boolean",
            "description": "true = active, false = deleted"
          },
          "CompanyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Company for which the employee is listed",
            "format": "int32"
          },
          "PersonalNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Employee number",
            "format": "int64"
          },
          "Language": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string",
            "description": "Language in ISO-639-1"
          },
          "User": {
            "maxLength": 30,
            "type": "string",
            "description": "Performis database username of the employee",
            "nullable": true
          },
          "UserUPN": {
            "maxLength": 1024,
            "type": "string",
            "description": "UPN of user - will be used to find a performis username for the employee",
            "nullable": true
          },
          "Description": {
            "maxLength": 120,
            "type": "string",
            "description": "The description of the employee. Automatically generated in the format: PersonalNo - FirstName LastName (ex. 1234 - John Smith)",
            "nullable": true
          },
          "LastName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Last name"
          },
          "FirstName": {
            "maxLength": 50,
            "type": "string",
            "description": "First name",
            "nullable": true
          },
          "Gender": {
            "type": "string",
            "description": "Gender: \r\nM = Male,\r\nF = Female",
            "nullable": true
          },
          "EntryDate": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "LeavingDate": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "BPIDEmployee": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Internal partner ID of employee. Must be supplied if ExternalBPIDEmployee is not.",
            "format": "int64",
            "nullable": true
          },
          "ExternalBPIDEmployee": {
            "maxLength": 50,
            "type": "string",
            "description": "External business partner ID for this employee. Must be supplied if (internal) BPIDEmployee is not.",
            "nullable": true
          },
          "OrganizationPath": {
            "maxLength": 500,
            "type": "string",
            "description": "The organisational part the employee works for.",
            "nullable": true
          },
          "Internal": {
            "type": "boolean",
            "description": "true = employee is an employed by the organisation. false = e.g. external employee"
          },
          "Department": {
            "maxLength": 100,
            "type": "string",
            "description": "Name of the department the employee is a member of",
            "nullable": true
          },
          "Function": {
            "maxLength": 100,
            "type": "string",
            "description": "Position or title of the employee",
            "nullable": true
          },
          "BPAddrIDWorkplace": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Business-partner address ID of the employees workplace. Must be supplied if ExternalGPAdrIDWorkplace is not.",
            "format": "int64",
            "nullable": true
          },
          "ExternalBPAddrIDWorkplace": {
            "maxLength": 50,
            "type": "string",
            "description": "External business-partner address ID of the employees workplace. Must be supplied if (internal) GPAdrIDWorkplace ist not.",
            "nullable": true
          },
          "AttributeValueSet": {
            "$ref": "#/components/schemas/AttributeValueSetDto"
          },
          "PrivateAddress": {
            "$ref": "#/components/schemas/PrivateAddressDto"
          }
        },
        "additionalProperties": false,
        "description": "EmployeeDto"
      },
      "Error": {
        "type": "object",
        "properties": {
          "ErrorDateTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "Context": {
            "type": "string",
            "nullable": true
          },
          "ErrorCode": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "ErrorDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MachineDriverDto": {
        "type": "object",
        "properties": {
          "DriverBpID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Business partner ID of the driver.",
            "format": "int64",
            "nullable": true,
            "example": 57689
          },
          "ExternalDriverBpID": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External business partner ID of the driver - may be used instead of performis.Bau.IF2BBA.Core.Dtos.MachineDriverDto.DriverBpID.",
            "nullable": true,
            "example": "ABC-12345"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object of a machine's driver.",
        "title": ""
      },
      "MachineDto": {
        "required": [
          "Active",
          "Description",
          "IsExternalResource",
          "MachineGUID",
          "MachineModelCode",
          "PlacingOnMarket"
        ],
        "type": "object",
        "properties": {
          "ChangeID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "ChangeID of the entity.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "ChangeDate": {
            "type": "string",
            "description": "ChangeDate of the entity.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "MachineID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Internal technical key for the machine.",
            "format": "int64",
            "nullable": true,
            "example": 4711
          },
          "ExternalMachineID": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External technical key for machine - may be used instead of performis.Bau.IF2BBA.Core.Dtos.MachineDto.MachineID.",
            "nullable": true,
            "example": "ABC-4711"
          },
          "Origin": {
            "maxLength": 10,
            "type": "string",
            "description": "Origin of the entity.",
            "nullable": true,
            "readOnly": true
          },
          "Active": {
            "type": "boolean",
            "description": "Sets whether or not the machine may be used in LEVA+.",
            "example": true
          },
          "Description": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Description (e.g. name, type, number) of the machine.",
            "example": "Genie RS-1932, Blue Version"
          },
          "PlacingOnMarket": {
            "type": "string",
            "description": "Date when the machine was first registered and used in the business. Important for service dates etc.",
            "format": "date",
            "example": "2022-01-11"
          },
          "MachineTypeID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Identification number for performis.Bau.IF2BBA.Core.Dtos.MachineTypeDto.",
            "format": "int64",
            "nullable": true,
            "example": 4711
          },
          "ExternalMachineTypeID": {
            "maxLength": 50,
            "type": "string",
            "description": "External identification number for performis.Bau.IF2BBA.Core.Dtos.MachineTypeDto\r\n- may be used instead of the performis.Bau.IF2BBA.Core.Dtos.MachineDto.MachineTypeID.",
            "nullable": true,
            "example": "ABC4711"
          },
          "MachineGUID": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier for a machine. Used for communication with third party systems.",
            "example": "87315090-9a06-4edc-8fc5-f9f68972e3c6"
          },
          "MachineNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Identification number for a single machine.",
            "format": "int64",
            "nullable": true,
            "example": 87315
          },
          "AcquisitionDate": {
            "type": "string",
            "description": "The date the machine was acquired.",
            "format": "date",
            "nullable": true,
            "example": "2022-11-25"
          },
          "UnderWarrantyUntil": {
            "type": "string",
            "description": "The warranty expiry date.",
            "format": "date",
            "nullable": true,
            "example": "2028-11-11"
          },
          "ManufacturerCode": {
            "maximum": 45439999,
            "minimum": 45430000,
            "type": "integer",
            "description": "C4543 code of the machine manufacturer.",
            "format": "int64",
            "nullable": true,
            "example": 45430010
          },
          "MasterNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "A master number is used to assign and identify the vehicle.",
            "nullable": true,
            "example": "325.752.721"
          },
          "ChassisNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "Chassis number of this vehicle.",
            "nullable": true,
            "example": "WMG6315L4FZ010120"
          },
          "EngineNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "The number on the engine.",
            "nullable": true,
            "example": "D - 0 000 123"
          },
          "TypeCertificateNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "Official number for identification of the vehicle type by external entities.",
            "nullable": true,
            "example": "123123"
          },
          "LicensePlate": {
            "maxLength": 20,
            "type": "string",
            "description": "Number on the licence plate.",
            "nullable": true,
            "example": "BE 1000"
          },
          "WikiUrl": {
            "maxLength": 200,
            "type": "string",
            "description": "URL to information portal.",
            "nullable": true
          },
          "OwnerCompanyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Number of the holder company.",
            "format": "int64",
            "nullable": true,
            "example": 1235
          },
          "AssetNo": {
            "maxLength": 16,
            "type": "string",
            "description": "Accounting asset number.",
            "nullable": true,
            "example": "1546"
          },
          "OwnerBpAddrID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Address number of the owner.",
            "format": "int64",
            "nullable": true,
            "example": 12345
          },
          "ExternalOwnerBpAddrID": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External address number of the owner.",
            "nullable": true,
            "example": "ABC-12345"
          },
          "LocationBpAddrID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Address number of the location.",
            "format": "int64",
            "nullable": true,
            "example": 12345
          },
          "ExternalLocationBpAddrID": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External address number of the location.",
            "nullable": true,
            "example": "ABC-12345"
          },
          "InvoiceBpAddrID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Address number of the customer to invoice.",
            "format": "int64",
            "nullable": true,
            "example": 12345
          },
          "ExternalInvoiceBpAddrID": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External address number of the customer to invoice.",
            "nullable": true,
            "example": "ABC-123451"
          },
          "RegularDriverBpID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Business partner ID of the regular driver.",
            "format": "int64",
            "nullable": true,
            "example": 12345
          },
          "ExternalRegularDriverBpID": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External business partner ID of the regular driver.",
            "nullable": true,
            "example": "ABC-12345"
          },
          "CounterGroupCode": {
            "maximum": 45469999,
            "minimum": 45460000,
            "type": "integer",
            "description": "C4546 code of the counter group.",
            "format": "int64",
            "nullable": true,
            "example": 45460010
          },
          "StandardTrailerMachineID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "The identification number of the semi-trailer that is usually coupled with this machine.",
            "format": "int64",
            "nullable": true,
            "example": 5679
          },
          "ExternalStandardTrailerMachineID": {
            "maxLength": 50,
            "minLength": 1,
            "type": "integer",
            "description": "The external identification number of the semi-trailer that is usually coupled with this machine.",
            "format": "int64",
            "nullable": true
          },
          "MachineModelCode": {
            "maximum": 45419999,
            "minimum": 45410000,
            "type": "integer",
            "description": "C4541 code of the machine model, e.g. crane.",
            "format": "int64",
            "example": 45410010
          },
          "BranchCode": {
            "maximum": 45629999,
            "minimum": 45620000,
            "type": "integer",
            "description": "C4562 identification code of the branch to which the machine belongs.",
            "format": "int64",
            "nullable": true,
            "example": 45620010
          },
          "IsExternalResource": {
            "type": "boolean",
            "description": "Is this machine an external resource?"
          },
          "YearOfManufacture": {
            "type": "integer",
            "description": "The year in which the machine was built.",
            "format": "int64",
            "nullable": true,
            "example": 2020
          },
          "DispositionGroupCode": {
            "maximum": 45429999,
            "minimum": 45420000,
            "type": "integer",
            "description": "C4542 code of the machine disposition type.",
            "format": "int64",
            "nullable": true,
            "example": 45420010
          },
          "LocationApiKey": {
            "maxLength": 50,
            "type": "string",
            "description": "API key to access location service for the machine.",
            "nullable": true
          },
          "IsMachineLocationSyncEnabled": {
            "type": "boolean",
            "description": "Whether or not the machines location is automatically synced.",
            "nullable": true
          },
          "ManufacturerApiCode": {
            "maximum": 33069999,
            "minimum": 33060000,
            "type": "integer",
            "description": "C3306 code of the used location API connector.",
            "format": "int64",
            "nullable": true,
            "example": 33060010
          },
          "EngineType": {
            "maxLength": 200,
            "type": "string",
            "description": "What type of engine does the machine have.",
            "nullable": true,
            "example": "Diesel"
          },
          "CostCenterNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Number of the cost center this machine is billed internally to.",
            "nullable": true,
            "example": "56789"
          },
          "TelematicsDeviceGroupCode": {
            "maximum": 33369999,
            "minimum": 33360000,
            "type": "integer",
            "description": "C3336 code defining which telematics system the machine uses.",
            "format": "int64",
            "nullable": true,
            "example": 33360010
          },
          "LastYearlyService": {
            "type": "string",
            "description": "Date of the machine's last yearly service.",
            "format": "date",
            "nullable": true,
            "example": "2023-01-12"
          },
          "TypeOfDrives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeOfDriveDto"
            },
            "description": "List of type of drives of the machine.",
            "nullable": true
          },
          "DispositionGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DispositionGroupDto"
            },
            "description": "List of additional disposition groups. A disposition group combines machines of the same type and use\r\n(not necessarily the same model or manufacturer). (E.g. a 20m boom, might be sold as 12m boom).",
            "nullable": true
          },
          "MachineDrivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MachineDriverDto"
            },
            "description": "List of the business partner IDs of the driver/s that can use this machine.",
            "nullable": true
          },
          "Counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CounterDto"
            },
            "description": "List of counters of the machine.",
            "nullable": true
          },
          "MachineUsages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationDto"
            },
            "description": "List of applications this machine is used in.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object of a performis Construction Basis `Machine` master data entry."
      },
      "MachineTypeDto": {
        "required": [
          "Active",
          "Description"
        ],
        "type": "object",
        "properties": {
          "ChangeID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "ChangeID of the entity.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "ChangeDate": {
            "type": "string",
            "description": "ChangeDate of the entity.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "MachineTypeID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Technical identification of the machine type.",
            "format": "int64",
            "nullable": true,
            "example": 4711
          },
          "ExternalMachineTypeID": {
            "maxLength": 50,
            "type": "string",
            "description": "External identification of the machine type - may be used instead of the performis.Bau.IF2BBA.Core.Dtos.MachineTypeDto.MachineTypeID.",
            "nullable": true,
            "example": "ABC4711"
          },
          "Origin": {
            "maxLength": 10,
            "type": "string",
            "description": "Origin of the entity.",
            "nullable": true,
            "readOnly": true
          },
          "Active": {
            "type": "boolean",
            "description": "Is the machine type active or not?"
          },
          "Description": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Name or designation of the associated machine type.",
            "example": "Genie-GS 1432"
          },
          "ManufacturerSeries": {
            "maxLength": 100,
            "type": "string",
            "description": "Which machine type series does the machine belong to?",
            "nullable": true,
            "example": "GS-1432"
          },
          "SuppliersBusinessBpAddrID": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Address number of the supplier.",
            "format": "int64",
            "nullable": true,
            "example": 3244
          },
          "ExternalSuppliersBusinessBpAddrID": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External address number of the supplier.",
            "nullable": true,
            "example": "ABC-12345"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object of a performis Construction Basis `MachineType` master data entry."
      },
      "MaintenanceWindow": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Aktiv": {
            "type": "boolean"
          },
          "DatumVon": {
            "type": "string",
            "format": "date-time"
          },
          "DatumBis": {
            "type": "string",
            "format": "date-time"
          },
          "Info": {
            "type": "string",
            "nullable": true
          },
          "ClientStartErlaubt": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PrivateAddressDto": {
        "type": "object",
        "properties": {
          "AdditionalLine": {
            "maxLength": 200,
            "type": "string",
            "description": "Additional line of an address which is neither a street nor a post office box. For example, \"c/o Samuel Schnelli\" or \"Office Samuel Schnelli\".",
            "nullable": true
          },
          "Country": {
            "maxLength": 2,
            "type": "string",
            "description": "Country in ISO code (ISO 3166)",
            "nullable": true
          },
          "City": {
            "maxLength": 40,
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "ZipCode": {
            "maxLength": 20,
            "type": "string",
            "description": "Zipcode of the address in country-specific format. For example, \"EC1A 1AA\" for London, England or \"9500\" for Wil, Switzerland.",
            "nullable": true
          },
          "Street": {
            "maxLength": 43,
            "type": "string",
            "description": "Street name without house number.",
            "nullable": true
          },
          "HouseNo": {
            "maxLength": 12,
            "type": "string",
            "description": "House number",
            "nullable": true
          },
          "Email": {
            "maxLength": 500,
            "type": "string",
            "description": "E-Mail address",
            "nullable": true
          },
          "MobileNo": {
            "maxLength": 50,
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "PhoneNo": {
            "maxLength": 50,
            "type": "string",
            "description": "Phone number (landline)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PrivateAddressDto",
        "title": ""
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "TypeOfDrive": {
        "enum": [
          "B",
          "H",
          "D",
          "E"
        ],
        "type": "string",
        "description": "Typ of drive values.\r\n- `B`: Petrol\r\n- `H`: Hybrid\r\n- `D`: Diesel\r\n- `E`: Electric"
      },
      "TypeOfDriveDto": {
        "type": "object",
        "properties": {
          "TypeOfDrive": {
            "$ref": "#/components/schemas/TypeOfDrive"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object of a machine's type of drive.",
        "title": ""
      },
      "JobDto": {
        "title": "JobDto",
        "type": "object",
        "description": "Data transfer object of a scheduling Job",
        "x-examples": {},
        "properties": {
          "CompanyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "The number of the company that this entry is assigned to",
            "format": "int64",
            "example": 100,
            "nullable": true
          },
          "InternalJobID": {
            "type": "number",
            "maximum": 9999999999,
            "minimum": 1,
            "example": 37281,
            "description": "internal Job ID of performis / leva+. will be set internally - leave empty if not known.\n\nMust be submitted if external ID is not submitted.",
            "nullable": true
          },
          "ExternalJobID": {
            "type": "string",
            "example": "J827109-5",
            "description": "external Job ID in requesting system. Can be set by the requesting system to identify a specific job. Must be unique!\n\nMust be submitted if internal ID is not submitted.",
            "nullable": true
          },
          "DetailsIncluded": {
            "type": "boolean",
            "example": "J827109-5",
            "description": "Reflects the requesting parameter on wether or not the dataset includes the Details property.\n\nInclude the details only, when necessary. Use the requesting parameter to avoid unnecessary loads."
          },
          "ReportEMailReceivers": {
            "example": "J827109-5",
            "type": "string",
            "description": "; or , seperated string of e-mail adresses to receive a report copy.\n\nNote: these addresses are set in the order header and proposed to receive a report copy. Wether or not they actually receive a report copy, is controlled by the ReportEMailNotifications submitted with the report.",
            "nullable": true
          },
          "LanguageIsoCode": {
            "type": "string",
            "example": "J827109-5",
            "description": "two digit language code (639-1)",
            "nullable": true
          },
          "InternalEmployeeID": {
            "type": "number",
            "example": "J827109-5",
            "description": "internal employee ID to which the job is assigned to",
            "nullable": true
          },
          "ExternalEmployeeID": {
            "type": "string",
            "example": "J827109-5",
            "description": "external employee ID to which the job is assigned to",
            "nullable": true
          },
          "OrderNo": {
            "type": "string",
            "example": "J827109-5"
          },
          "OrderTitle": {
            "type": "string",
            "example": "J827109-5"
          },
          "JobDateTimeFrom": {
            "type": "string",
            "format": "date-time",
            "description": "scheduled start date and time for this job"
          },
          "JobDateTimeTo": {
            "type": "string",
            "format": "date-time",
            "description": "scheduled end date and time for this job"
          },
          "PrimaryJobLocation": {
            "$ref": "#/components/schemas/JobLocationsDto"
          },
          "ResourceNo": {
            "format": "date-time",
            "type": "number",
            "description": "the resource demand number to which this job is assigned to.\n\neach order can have multiple resource demands. they are numbered 0001 onwards and are unique within the order. (similar to order-line position no., but for resource demands)"
          },
          "SchedulingGroupCode": {
            "format": "date-time",
            "type": "number",
            "description": "Code 4542\nuse IF2BA to retrieve value list."
          },
          "JobStatusCode": {
            "format": "date-time",
            "type": "number",
            "description": "Code 4555\nuse IF2BA to retrieve value list."
          },
          "ResourceTypeCode": {
            "format": "date-time",
            "type": "number",
            "description": "Code 4550\nuse IF2BA to retrieve value list."
          },
          "ResourceStatusCode": {
            "format": "date-time",
            "type": "number",
            "description": "Code 4554\nuse IF2BA to retrieve value list."
          },
          "InternalMachineID": {
            "format": "date-time",
            "type": "number",
            "description": "internal maschine ID assigned to job",
            "nullable": true
          },
          "ExternalMachineID": {
            "format": "date-time",
            "type": "string",
            "description": "external machine ID assigned to job",
            "nullable": true
          },
          "InternalAccessoryID": {
            "format": "date-time",
            "type": "number",
            "description": "internal accessory ID assigned to job",
            "nullable": true
          },
          "ExternalAccessoryID": {
            "format": "date-time",
            "type": "string",
            "description": "external accessory ID assigned to job",
            "nullable": true
          },
          "UseCaseCode": {
            "format": "date-time",
            "type": "number",
            "description": "Code 6951\nuse IF2BA to retrieve value list."
          },
          "ResourceAvailableNotificaitonInternalEmployeeID": {
            "type": "number",
            "description": "internal Employee ID who notified that the machine ressource to be available for scheduling again.",
            "nullable": true
          },
          "ResourceAvailableNotificaitonExternalEmployeeID": {
            "type": "string",
            "description": "external Employee ID who notified that the machine ressource to be available for scheduling again.",
            "nullable": true
          },
          "ResourceAvailableNotificationDateTime": {
            "format": "date-time",
            "type": "string",
            "description": "DateTime of notification on which the machine ressource is made available for scheduling again. (The  maschine is no longer needed on the job)\n\nNULLas long as the resource is still being used.",
            "nullable": true
          },
          "Details": {
            "$ref": "#/components/schemas/JobDetailsDto"
          },
          "DocumentList": {
            "type": "array",
            "description": "list of attached documents",
            "items": {
              "$ref": "#/components/schemas/JobDocumentDto"
            }
          },
          "TimeStampList": {
            "type": "array",
            "description": "list of time stamps on this job",
            "items": {
              "$ref": "#/components/schemas/JobTimeStampDto"
            }
          },
          "ReportList": {
            "type": "array",
            "description": "list of reports on this job",
            "items": {
              "$ref": "#/components/schemas/JobReportDto"
            }
          },
          "HandOver": {
            "$ref": "#/components/schemas/JobHandOverDto"
          },
          "Return": {
            "$ref": "#/components/schemas/JobReturnDto"
          },
          "SurchargeList": {
            "type": "array",
            "description": "surcharges which were added to the job",
            "items": {
              "$ref": "#/components/schemas/JobSurchargeDto"
            }
          },
          "FormList": {
            "type": "array",
            "description": "forms that were added to the job",
            "items": {
              "$ref": "#/components/schemas/JobFormDto"
            }
          },
          "ProblemList": {
            "type": "array",
            "description": "conditions related to the jobs machine or accessory.",
            "items": {
              "$ref": "#/components/schemas/JobProblemDto"
            }
          },
          "TransportDemandList": {
            "type": "array",
            "description": "on ",
            "items": {
              "$ref": "#/components/schemas/JobTransportDemandDto"
            }
          }
        },
        "required": [
          "CompanyNo",
          "DetailsIncluded",
          "OrderNo",
          "OrderTitle",
          "JobDateTimeFrom",
          "JobDateTimeTo",
          "PrimaryJobLocation",
          "ResourceNo",
          "SchedulingGroupCode",
          "JobStatusCode",
          "ResourceTypeCode",
          "ResourceStatusCode",
          "UseCaseCode"
        ]
      },
      "JobDetailsDto": {
        "title": "JobDetailsDto",
        "description": "Data transfer object of a scheduling job (details)",
        "x-examples": {},
        "type": "object",
        "properties": {
          "ScheduleList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobScheduleDto"
            }
          },
          "ContactList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobContactDto"
            }
          },
          "BookingActivityList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobBookingActivityDto"
            }
          },
          "LocationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobLocationsDto"
            }
          }
        }
      },
      "JobScheduleDto": {
        "title": "JobScheduleDto",
        "type": "object",
        "description": "Data transfer object of a scheduling job (job schedule)",
        "properties": {
          "InternalJobScheduleID": {
            "type": "number",
            "nullable": true
          },
          "ExternalJobScheduleID": {
            "type": "string",
            "nullable": true
          },
          "InternalJobID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalJobID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "J827109-5",
            "nullable": true
          },
          "SortNo": {
            "type": "number"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "DateTime": {
            "type": "string",
            "nullable": true
          },
          "IsOccupied": {
            "type": "boolean"
          }
        }
      },
      "JobContactDto": {
        "title": "JobContactDto",
        "type": "object",
        "description": "Data transfer object of a scheduling job (contact)",
        "properties": {
          "InternalContactID": {
            "type": "number",
            "nullable": true
          },
          "ExternalContactID": {
            "type": "string",
            "nullable": true
          },
          "InternalJobID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalJobID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "J827109-5",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "FullName": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "EMail": {
            "type": "string",
            "nullable": true
          },
          "IsCustomer": {
            "type": "boolean"
          },
          "IsContactOnLocation": {
            "type": "boolean"
          }
        }
      },
      "JobBookingActivityDto": {
        "title": "JobBookingActivityDto",
        "type": "object",
        "description": "Data transfer object of a scheduling job (booking activity)",
        "properties": {
          "InternalBookingActivityID": {
            "type": "number",
            "nullable": true
          },
          "ExternalBookingActivityID": {
            "type": "string",
            "nullable": true
          },
          "ActivityCode": {
            "type": "string"
          },
          "Activity": {
            "type": "string",
            "example": "not translated free text",
            "nullable": true
          },
          "Active": {
            "example": "not translated free text",
            "type": "boolean"
          }
        },
        "required": [
          "ActivityCode"
        ]
      },
      "JobTimeStampDto": {
        "title": "JobTimeStampDto",
        "type": "object",
        "description": "Data transfer object of a job time stamp",
        "properties": {
          "InternalJobTimestampID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job timestamp.",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalJobTimestampID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "TS289182-5",
            "nullable": true
          },
          "InternalJobID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalJobID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "J827109-5",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2022–08–23T02:30:00+04:30"
          },
          "TimestampTypeCode": {
            "type": "integer",
            "format": "int32",
            "description": "The type of timestamp (TimestampType)."
          },
          "InternalBookingActivityID": {
            "type": "integer",
            "format": "int32",
            "description": "The identifier for resource booking activity.",
            "nullable": true
          },
          "ExternalBookingActivityID": {
            "type": "string",
            "format": "int32",
            "description": "The identifier for resource booking activity.",
            "nullable": true
          },
          "InternalMachineID": {
            "type": "integer",
            "format": "int32",
            "description": "The identifier for the machine.",
            "nullable": true
          },
          "ExternalMachineID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the the machine this job time stamp is assigned to",
            "example": "MRK8938719",
            "nullable": true
          },
          "InternalEmployeeID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal identifier for the employee."
          },
          "ExternalEmployeeID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the the employee this job time stamp is assigned to",
            "example": "TS289182-5",
            "nullable": true
          },
          "Comment": {
            "type": "string",
            "description": "A comment associated with the timestamp.",
            "nullable": true
          }
        },
        "required": [
          "Timestamp",
          "TimestampTypeCode",
          "InternalEmployeeID"
        ]
      },
      "JobReportDto": {
        "title": "JobReportDto",
        "type": "object",
        "description": "Data transfer object of a job report",
        "properties": {
          "InternalReportID": {
            "type": "number",
            "nullable": true
          },
          "ExternalReportID": {
            "type": "string",
            "nullable": true
          },
          "ReportTimeStampList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobReportTimeStampDto"
            }
          },
          "ReportSurchargeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobReportSurchargeDto"
            }
          },
          "EMailNotificationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobReportEMailNotificationDto"
            }
          }
        }
      },
      "JobReportTimeStampDto": {
        "title": "JobReportTimeStampDto",
        "type": "object",
        "description": "Data transfer object of a job report time stamp",
        "properties": {
          "InternalJobReportTimestampID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job timestamp.",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalJobReportTimestampID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "TS289182-5",
            "nullable": true
          },
          "InternalJobID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalJobID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "J827109-5",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2022–08–23T02:30:00+04:30"
          },
          "TimestampTypeCode": {
            "type": "integer",
            "format": "int32",
            "description": "The type of timestamp (TimestampType)."
          },
          "Source": {
            "type": "string",
            "format": "int32",
            "description": "The type of timestamp (TimestampType)."
          },
          "InternalBookingActivityID": {
            "type": "integer",
            "format": "int32",
            "description": "The identifier for resource booking activity.",
            "nullable": true
          },
          "ExternalBookingActivityID": {
            "type": "string",
            "format": "int32",
            "description": "The identifier for resource booking activity.",
            "nullable": true
          },
          "InternalMachineID": {
            "type": "integer",
            "format": "int32",
            "description": "The identifier for the machine.",
            "nullable": true
          },
          "ExternalMachineID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the the machine this job time stamp is assigned to",
            "example": "MRK8938719",
            "nullable": true
          },
          "InternalEmployeeID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal identifier for the employee."
          },
          "ExternalEmployeeID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the the employee this job time stamp is assigned to",
            "example": "TS289182-5",
            "nullable": true
          },
          "Comment": {
            "type": "string",
            "description": "A comment associated with the timestamp.",
            "nullable": true
          }
        },
        "required": [
          "Timestamp",
          "TimestampTypeCode",
          "Source",
          "InternalEmployeeID"
        ]
      },
      "JobLocationsDto": {
        "title": "JobLocationsDto",
        "type": "object",
        "description": "Data transfer object of a scheduling job (location)",
        "properties": {
          "InternalLocationID": {
            "type": "number",
            "nullable": true
          },
          "ExternalLocationID": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "LocationType": {
            "type": "string",
            "nullable": true
          },
          "TransportRestriction": {
            "type": "string",
            "nullable": true
          },
          "Adress": {
            "$ref": "#/components/schemas/AddressDto"
          }
        },
        "required": [
          "LocationType"
        ]
      },
      "JobReportSurchargeDto": {
        "title": "JobReportSurchargeDto",
        "type": "object",
        "description": "Data transfer object of a job report (surcharge)",
        "properties": {
          "InternalReportSurchargeID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job timestamp.",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalReportSurchargeID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "TS289182-5",
            "nullable": true
          },
          "InternalJobID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalJobID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "J827109-5",
            "nullable": true
          },
          "InternalReportID": {
            "type": "number",
            "nullable": true
          },
          "ExternalReportID": {
            "type": "string",
            "nullable": true
          },
          "DateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The external unique identifer for the job onto which the time stamp is assigned"
          },
          "Assignment": {
            "type": "string",
            "format": "date-time",
            "description": "The external unique identifer for the job onto which the time stamp is assigned"
          },
          "Quantity": {
            "type": "number",
            "format": "float",
            "description": "The external unique identifer for the job onto which the time stamp is assigned"
          }
        }
      },
      "JobReportEMailNotificationDto": {
        "title": "JobReportSurchargeDto",
        "type": "object",
        "description": "Data transfer object of a job report (surcharge)",
        "properties": {
          "InternalEMailNotificationID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalEMailNotificationID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "J827109-5",
            "nullable": true
          },
          "InternalJobID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalJobID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "J827109-5",
            "nullable": true
          },
          "InternalReportID": {
            "type": "number",
            "nullable": true
          },
          "ExternalReportID": {
            "type": "string",
            "nullable": true
          },
          "Sender": {
            "type": "string",
            "format": "float",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "nullable": true
          },
          "SendDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "nullable": true
          },
          "CreateDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The external unique identifer for the job onto which the time stamp is assigned"
          },
          "CreatedByInternalEmployeeID": {
            "type": "number",
            "format": "float",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "nullable": true
          },
          "CreatedByExternalEmployeeID": {
            "type": "string",
            "format": "float",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "nullable": true
          },
          "ModifyDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "nullable": true
          },
          "ModifiedByInternalEmployeeID": {
            "type": "number",
            "format": "float",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "nullable": true
          },
          "ModifiedByExternalEmployeeID": {
            "type": "string",
            "format": "float",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "nullable": true
          }
        }
      },
      "JobHandOverDto": {
        "title": "JobHandOverDto",
        "type": "object",
        "description": "Data transfer object of a job handover",
        "properties": {
          "InternalHandoverID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job timestamp.",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalHandoverID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "TS289182-5",
            "nullable": true
          },
          "InternalJobID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalJobID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "J827109-5",
            "nullable": true
          },
          "InternalEmployeeID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal identifier for the employee."
          },
          "ExternalEmployeeID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the the employee this job time stamp is assigned to",
            "example": "TS289182-5",
            "nullable": true
          },
          "HandoverDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "WICHTIG: beschreibung mit 'per' Zeistempelung, bedeuted dass die Übergabe abgeschlossen ist und der Einsazt beginnt.",
            "example": "2022–08–23T02:30:00+04:30"
          },
          "CustomerBriefed": {
            "type": "boolean",
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2022–08–23T02:30:00+04:30"
          },
          "Comment": {
            "type": "string",
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2022–08–23T02:30:00+04:30",
            "nullable": true
          },
          "CustomerName": {
            "type": "string",
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2022–08–23T02:30:00+04:30",
            "nullable": true
          },
          "CustomerSignatureImageBase64": {
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2022–08–23T02:30:00+04:30",
            "type": "string",
            "nullable": true
          },
          "CustomerSignatureImageLink": {
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2022–08–23T02:30:00+04:30",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "HandoverDateTime",
          "CustomerBriefed",
          "CustomerName",
          "CustomerSignatureImageBase64",
          "CustomerSignatureImageLink"
        ]
      },
      "JobReturnDto": {
        "title": "JobReturnDto",
        "type": "object",
        "description": "Data transfer object of a job return",
        "properties": {
          "InternalReturnID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job timestamp.",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalReturnID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "TS289182-5",
            "nullable": true
          },
          "InternalJobID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalJobID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "J827109-5",
            "nullable": true
          },
          "InternalEmployeeID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal identifier for the employee."
          },
          "ExternalEmployeeID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the the employee this job time stamp is assigned to",
            "example": "TS289182-5",
            "nullable": true
          },
          "ReturnDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2022–08–23T02:30:00+04:30",
            "description": "> WICHTIG: beschreibung mit \"PER\" Rücknahme begonnen, weil beeindet den Einsatz \"per\" zeitstempelung"
          },
          "Damage": {
            "type": "boolean",
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2022–08–23T02:30:00+04:30"
          },
          "Comment": {
            "type": "string",
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2022–08–23T02:30:00+04:30",
            "nullable": true
          },
          "CustomerName": {
            "type": "string",
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2022–08–23T02:30:00+04:30",
            "nullable": true
          },
          "CustomerSignatureImageBase64": {
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2022–08–23T02:30:00+04:30",
            "type": "string",
            "nullable": true
          },
          "CustomerSignatureImageLink": {
            "format": "date",
            "description": "The timestamp associated with the job.",
            "example": "2022–08–23T02:30:00+04:30",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "Damage"
        ]
      },
      "JobSurchargeDto": {
        "title": "JobSurchargeDto",
        "type": "object",
        "description": "Data transfer object of a job surcharge",
        "properties": {
          "InternalSurchargeID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job timestamp.",
            "example": 483915,
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalSurchargeID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "TS289182-5",
            "nullable": true
          },
          "InternalJobID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalJobID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "J827109-5",
            "nullable": true
          },
          "DateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The external unique identifer for the job onto which the time stamp is assigned"
          },
          "Assignment": {
            "type": "string",
            "format": "date-time",
            "description": "The external unique identifer for the job onto which the time stamp is assigned"
          },
          "Quantity": {
            "type": "number",
            "format": "float",
            "description": "The external unique identifer for the job onto which the time stamp is assigned"
          },
          "InternalReportID": {
            "type": "number",
            "nullable": true
          },
          "ExternalReportID": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "JobFormDto": {
        "title": "JobFormDto",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Data transfer object of a job form"
      },
      "JobProblemDto": {
        "title": "JobProblemDto",
        "type": "object",
        "description": "Data transfer object of a job problem",
        "properties": {
          "InternalProblemID": {
            "type": "number",
            "nullable": true
          },
          "ExternalProblemID": {
            "type": "string",
            "nullable": true
          },
          "InternalJobID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal unique identifier for the job onto which the time stamp is assigned",
            "minimum": 1,
            "maximum": 9999999999,
            "nullable": true
          },
          "ExternalJobID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the job onto which the time stamp is assigned",
            "example": "J827109-5",
            "nullable": true
          },
          "ProblemType": {
            "type": "number"
          },
          "Description": {
            "type": "string",
            "maxLength": 200
          },
          "ImpactOnConditionBool": {
            "type": "boolean"
          },
          "VisibleForCustomerBool": {
            "type": "boolean"
          },
          "CustomersFaultBool": {
            "type": "boolean"
          },
          "Comment": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "SolvedBool": {
            "type": "boolean"
          },
          "ReportedByInternalEmployeeID": {
            "type": "integer",
            "format": "int32",
            "description": "The internal identifier for the employee."
          },
          "ReportedByExternalEmployeeID": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the the employee this job time stamp is assigned to",
            "example": "TS289182-5",
            "nullable": true
          },
          "ReportedDateTime": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the the employee this job time stamp is assigned to",
            "example": "TS289182-5"
          },
          "ReportingContext": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the the employee this job time stamp is assigned to",
            "example": "LEVA.JOB.HANDOVER",
            "maxLength": 30
          },
          "ReportingContextText": {
            "type": "string",
            "format": "int32",
            "description": "The external unique identifer for the the employee this job time stamp is assigned to",
            "maxLength": 200,
            "example": "Custom Job Application"
          },
          "FixRequiredBool": {
            "type": "boolean"
          },
          "IncidentMGMTRequiredBool": {
            "type": "boolean"
          },
          "APP_ID": {
            "type": "string",
            "example": "42C81110DC714C528B6EB984CD9600E1",
            "nullable": true
          }
        },
        "required": [
          "ProblemType",
          "Description",
          "ImpactOnConditionBool",
          "VisibleForCustomerBool",
          "CustomersFaultBool",
          "SolvedBool",
          "ReportedDateTime",
          "ReportingContext",
          "ReportingContextText",
          "FixRequiredBool",
          "IncidentMGMTRequiredBool"
        ]
      },
      "JobDocumentDto": {
        "title": "JobDocumentDto",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Data transfer object of a job document"
      },
      "JobTransportDemandDto": {
        "title": "JobTransportDemandDto",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Data transfer object of a job transport demand"
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": []
    }
  ]
}